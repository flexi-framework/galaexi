!===============================================================================
! Parameters for the Ercoftac periodic hill testcase 
! http://www.kbwiki.ercoftac.org/w/index.php/Abstr:2D_Periodic_Hill_Flow
!===============================================================================
!============================================================================================================================
! Interpolation
!============================================================================================================================
N                     =                   5 ! Polynomial degree of computation to represent to solution
!============================================================================================================================
! Restart
!============================================================================================================================
ResetTime             =                   F ! Override solution time to t=0 on restart.
!============================================================================================================================
! Output
!============================================================================================================================
ProjectName           = phillRe700Ma0.2NoModel ! Name of the current simulation (mandatory).
Logging               =                   F ! Write log files containing debug output.
ErrorFiles            =                   T ! Write error files containing error output.
OutputFormat          =                None ! File format for visualization: None, Tecplot, TecplotASCII, ParaView.  Note:
                                            ! Tecplot output is currently unavailable due to licensing issues.
ASCIIOutputFormat     =                 CSV ! File format for ASCII files, e.g. body forces: CSV, Tecplot.
doPrintStatusLine     =                   T ! Print: percentage of time, ...
WriteStateFiles       =                   T ! Write HDF5 state files. Disable this only for debugging issues.
                                            ! NO SOLUTION WILL BE WRITTEN!
!============================================================================================================================
! Mesh
!============================================================================================================================
MeshFile              =       phill_mesh.h5 ! (relative) path to meshfile (mandatory).
useCurveds            =                   T ! Controls usage of high-order information in mesh. Turn off to discard high-order
                                            ! data and treat curved meshes as linear meshes.
!============================================================================================================================
! Equation of State
!============================================================================================================================
kappa                 =                 1.4 ! Heat capacity ratio / isentropic exponent
R                     =    17.8571428571429 ! Specific gas constant
Pr                    =                0.72 ! Prandtl number
mu0                   =      1.42857142E-03 ! Dynamic Viscosity
!============================================================================================================================
! Equation
!============================================================================================================================
IniRefState           = 1                   ! Refstate required for initialization.
RefState              = (/1.,1.,0.,0.,17.8571428571429/) ! State(s) in primitive variables (density, velx, vely, velz, pressure).
!============================================================================================================================
! Riemann
!============================================================================================================================
Riemann               =               RoeL2 ! Riemann solver to be used: LF, HLLC, Roe, RoeEntropyFix, HLL, HLLE, HLLEM
RiemannBC             =                Same ! Riemann solver used for boundary conditions: Same, LF, Roe, RoeEntropyFix, HLL,
                                            ! HLLE, HLLEM
!============================================================================================================================
! SplitDG
!============================================================================================================================
SplitDG               =                  PI ! SplitDG formulation to be used: SD, MO, DU, KG, PI, CH
!============================================================================================================================
! Exactfunc
!============================================================================================================================
IniExactFunc          =                   0 ! Exact function to be used for computing initial solution.
!============================================================================================================================
! Testcase
!============================================================================================================================
massFlowRef           =              9.1125 ! Prescribed massflow for testcase.
Forcing_MaxMemory     =               100.0 ! Maximum amount of memory to be used to buffer testcase forcing log data. If
                                            ! memory is exceeded before analyze level, log files are written.
massFlowBCName        =       BC_periodicx- ! Name of BC at which massflow is computed.
!============================================================================================================================
! Lifting
!============================================================================================================================
doWeakLifting         =                   F ! Set true to perform lifting in weak form.
doConservativeLifting =                   F ! Set true to compute the volume contribution to the gradients in conservative
                                            ! form, i.e. deriving the solution multiplied by the metric terms instead of
                                            ! deriving the solution and multiplying by the metrics. Only available for
                                            ! doWeakLifting=.FALSE.
!============================================================================================================================
! TimeDisc
!============================================================================================================================
TimeDiscMethod        =      CarpenterRK4-5 ! Specifies the type of time-discretization to be used, e.g. the name of a
                                            ! specific Runge-Kutta scheme. Possible values:
                                            !   * standardrk3-3
                                            !   * carpenterrk4-5
                                            !   * niegemannrk4-14
                                            !   * toulorgerk4-8c
                                            !   * toulorgerk3-7c
                                            !   * toulorgerk4-8f
                                            !   * ketchesonrk4-20
                                            !   * ketchesonrk4-18
TEnd                  =                240. ! End time of the simulation (mandatory).
CFLScale              =                 0.8 ! Scaling factor for the theoretical CFL number, typical range 0.1..1.0
                                            ! (mandatory)
DFLScale              =                 0.8 ! Scaling factor for the theoretical DFL number, typical range 0.1..1.0
                                            ! (mandatory)
!============================================================================================================================
! Analyze
!============================================================================================================================
CalcErrorNorms        =                   F ! Set true to compute L2 and LInf error norms at analyze step.
AnalyzeToFile         =                   F ! Set true to output result of error norms to a file (CalcErrorNorms=T)
Analyze_dt            =                20.0 ! Specifies time intervall at which analysis routines are called.
nWriteData            =                   1 ! Intervall as multiple of Analyze_dt at which HDF5 files (e.g.
                                            ! State,TimeAvg,Fluc) are written.
!============================================================================================================================
! AnalyzeEquation
!============================================================================================================================
CalcBodyForces        =                   F ! Set true to compute body forces at walls
CalcBulkState         =                   F ! Set true to compute the flows bulk quantities
CalcMeanFlux          =                   F ! Set true to compute mean flux through boundaries
CalcWallVelocity      =                   T ! Set true to compute velocities at wall boundaries
CalcTotalStates       =                   F ! Set true to compute total states (e.g. Tt,pt)
CalcTimeAverage       =                   T ! Set true to compute time averages
WriteBodyForces       =                   T ! Set true to write bodyforces to file
WriteBulkState        =                   T ! Set true to write bulk state to file
WriteMeanFlux         =                   T ! Set true to write mean flux to file
WriteWallVelocity     =                   T ! Set true to write wall velolcities file
WriteTotalStates      =                   T ! Set true to write total states to file
VarNameAvg            = Density             ! Names of variables to be time-averaged
VarNameAvg            = VelocityX           ! Names of variables to be time-averaged
VarNameAvg            = VelocityY           ! Names of variables to be time-averaged
VarNameAvg            = VelocityZ           ! Names of variables to be time-averaged
VarNameAvg            = Pressure            ! Names of variables to be time-averaged
VarNameFluc           = VelocityX           ! Names of variables to be time-averaged
VarNameFluc           = VelocityY           ! Names of variables to be time-averaged
VarNameFluc           = VelocityZ           ! Names of variables to be time-averaged
VarNameFluc           = uv                  ! Names of variables to be time-averaged
